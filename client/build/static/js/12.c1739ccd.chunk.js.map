{"version":3,"sources":["components/changePassword.js","url.js"],"names":["toast","configure","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","boxShadow","padding","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Changepassword","props","classes","token","localStorage","getItem","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","otp","setOtp","receivedOtp","setReceivedOtp","loader","setLoader","secureAxios","axios","create","baseURL","url","headers","component","maxWidth","elevation","className","style","position","top","variant","noValidate","required","fullWidth","id","label","name","autoComplete","value","onChange","evt","target","autoFocus","type","color","onClick","event","preventDefault","data","post","then","response","body","status","info","msg","autoClose","error","catch","err","console","log","length","success","history","push","container","item","xs","to"],"mappings":"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","file":"static/js/12.c1739ccd.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport url from '../url';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    boxShadow:'0px 0px 5px 5px purple',\r\n    padding:'30px'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Changepassword(props) {\r\n  const classes = useStyles();\r\n  const token=localStorage.getItem('token')\r\n\r\n  const [email,setEmail]=useState('')\r\n  const [password,setPassword]=useState('')\r\n  const [confirmPassword,setConfirmPassword]=useState('')\r\n  const [otp,setOtp]=useState('')\r\n  const [receivedOtp,setReceivedOtp]=useState('')\r\n  const [loader,setLoader]=useState('none')\r\n\r\n\r\n  const secureAxios=axios.create(\r\n                        {\r\n                         baseURL:url,\r\n                         headers:{\r\n                          \"Authorization\":`bearer ${token}`\r\n                        }\r\n                      })\r\n\r\n\r\n  \tconst changePassword=(event)=>{\r\n      setLoader('block')\r\n\r\n  \t\tevent.preventDefault();\r\n\r\n      if(otp!=receivedOtp){\r\n        toast.error('Incorrect OTP',{autoClose:1000}); return;\r\n      }\r\n\r\n      if(password.length<6){toast.error(\"Password length must be at least 6\",{autoClose:2000}); return; }\r\n\r\n      if(confirmPassword!=password){toast.error(\"Password and Confirm password don't match\",{autoClose:2000}); return; }\r\n\r\n  \t\tconst data={email,password};\r\n  \t\tsecureAxios.post('changePassword',data)\r\n      .then((response)=>{\r\n        setLoader('none')\r\n        const body=response.data\r\n        if(body.status==1){\r\n          toast.success('Password was changed successfully',{autoClose:2000})\r\n          props.history.push('/');\r\n        }\r\n        else toast.error('Something went wrong');\r\n  \t\t})\r\n      .catch(err=>{setLoader('none'); console.log(err); toast.error('Something went wrong');});\r\n   }\r\n\r\n\r\n\r\n  \tconst forgotPassword=(event)=>{\r\n        setLoader('block')\r\n    \t\tevent.preventDefault();\r\n    \t\tlet data={email};\r\n        //alert(secureAxios)\r\n        secureAxios.post('forgotPassword',data)\r\n        .then((response)=>{\r\n            setLoader('none')\r\n            const body=response.data\r\n            let receivedOtp=null;\r\n\r\n\r\n            if(body.status==1){toast.info(body.msg,{autoClose:1000});setReceivedOtp(body.otp);}\r\n            else toast.error(\"Something went wrong\",{autoClose:1000});\r\n\r\n    \t\t })\r\n         .catch(err=>{ setLoader('none'); console.log(err); toast.error(\"Something went wrong\",{autoClose:1000});});\r\n    }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Paper  elevation={3} className={classes.paper}>\r\n      <CircularProgress style={{position:'fixed',top:'70px',display:loader}}/>\r\n\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Change password\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n            onChange={(evt)=>setEmail(evt.target.value)}\r\n            autoFocus\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n            onClick={forgotPassword}\r\n          >\r\n            Send OTP\r\n          </Button>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"otp\"\r\n            label=\"Enter OTP\"\r\n            name=\"otp\"\r\n            value={otp}\r\n            onChange={(evt)=>setOtp(evt.target.value)}\r\n            autoFocus\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(evt)=>setPassword(evt.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Confirm password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(evt)=>setConfirmPassword(evt.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={changePassword}\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/\" variant=\"body2\">\r\n                Back to Home\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n      \r\n    </Container>\r\n  );\r\n}\r\n","const url='';\r\nexport default url;\r\n"],"sourceRoot":""}